<div class="patterns-modal modal fade" id="patternsModal15" tabindex="-1" role="dialog" aria-hidden="true">
  <div class="modal-content">
    <div class="close-modal" data-dismiss="modal">
      <div class="lr">
        <div class="rl">
        </div>
      </div>
    </div>
    <header>
      <div class="container">
        <div class="row">
          <div class="col-xs-12 col-sm-5 col-md-4">
            <div class="intro-text">
              <hr>
              <div class="intro-lead-in">Component Behavior</div>
              <div class="intro-heading">Decide by Matching</div>
              <img src="images/maturity-1.svg" width="20px">
              <img src="images/maturity-1.svg" width="20px">
              </div>
          </div>
          <div class="col-xs-12 col-sm-7 col-md-8">
            <p class="text-center"><img src="images/patterns/decide-by-matching.jpg" alt="Change History" class="img-responsive" /></p>
            <div id="patternsModal15-content1">
            </div>
            <script>
              document.getElementById('patternsModal15-content1').innerHTML =
                marked('*Equate supply and demand with matching. Qualify customers upfront through their characteristics, and matching them with product characteristics.*');
            </script>
          </div>
        </div>
      </div>
    </header>
    <!-- Services Section -->
    <section>
      <div class="container">
        <div class="row text-left">
          <div class="col-xs-12 col-sm-7 col-sm-push-5 col-md-8 col-md-push-4">
            <div id="patternsModal15-content2"></div>
            <script>
              document.getElementById('patternsModal15-content2').innerHTML =
                marked('Most processing structures in Telcos today, from commercial offerings to infrastructure configurations, are dominantly structured around repeatability, where standardized specifications and procedures are used to serve the needs of the many. Common denominators are obtained from market research to design products that will appeal a broad number of people, usually grouped together in Customer Segments. All customers in that segment are usually treated the same way, and all instances of customers with the same instances product are classified and processed with the same repeatable logic. For example, a customer’s eligibility for a product that requires the Telco to make up-front investments like providing subsidized devices is usually accessed using a decision tree that use imperative logic and forward-chaining. The customer’s credit rating, history, and other characteristics are processed to judge whether they are eligible to obtain a product. Ineligible customers for a product either find themselves at the mercy of repeating the process until they find a fit, or if they have the good fortunate of dealing with a knowledgeable agent, being pointed towards a product where they can surmount the eligibility checks. Similarly, when many customers are provisioned with the same product, the same specifications are used to instantiate customer profiles, billing records, service configurations, and resource configurations. New specifications are required when the specific situation of a customer makes the standard specification unprovisionable, such as whether they live in a remote mountain top or crowded building with several lines or whether the Telco’s product is operable with the customer’s existing devices. As the number of specifications grow, so do the number of rules and conditions that need to be checked. Most Telcos solve this situational variety by selecting the set of situations they can service. Either by making upfront checks to decide the feasibility of providing a product or by offering simplified products that do not cater for any variety. By rejecting customers who don’t fulfil a product’s criteria, Telcos miss out on acquiring customers and revenue opportunities. For the few that fit the exact specifications and procedures, future changes remain within the constraints of the rigid boundaries of the product.<br /><br />Therefore have several possibilities that can be a good match for any situation, and when it doubt and possible, suggest different possibilities to people so they can choose the optimal possibility. Avoid exactness and favour fuzziness, making it possible for the same product to fulfil several situations. When an entity such as a product or configuration does not fulfil an exact need, make it possible to change the entity easily until it does. Then remember the changed entity as a new possibility with correlation to the situation it helped resolve. Match a customer’s demand with products that can be supplied by matching the characteristics of the customer, the customer’s installed base, and the customer’s preferences with the characteristics of products, the ability of the products to complement the customer’s existing installed base, and the ability to meet the customer’s preferences. Give customers and products to exist in their own unique combinations and situations, and possess the ability to interpret unique customer and product situations. When configuring equipment for a customer, capture the situation of the customer as accurately as possible, and suggest several alternatives based on similar location (a neighbour’s configuration for a set-top box might work better than the standard one), device ecosystem (a customer who has their own media center and wants to configure it with the Telco’s cloud solution is matched with the configuration used for a customer with a similar media center), consumption habits (someone who only watches mysteries in the weekend is suggested to have a subscription that fulfils their basic needs), or financial constraints (a customer who was unable to obtain a product because of poor credit history is matched with the products provided to a customer with similar history).<br /><br />Give the space for Customers to create their Own by using a Language for Instances. Rather than fixed specifications and procedures, have several possibilities where requests can be made for One just like that One. By Pre-provisioning Frequents and Piecemeal Provisioning, keep the most frequently used possibilities in memory to serve in real-time. Make it possible for Aware Instances to be in control of their own Product Markers. Create the possibility to have Infinite Varietals, and make products Adaptable with Life while keeping their Change History.');
            </script>
          </div>
          <div class="col-xs-12 col-sm-5 col-sm-pull-7 col-md-4 col-md-pull-8">
            <div id="patternsModal15-content3" class="patterns-notes">
            </div>
            <script>
              document.getElementById('patternsModal15-content3').innerHTML =
                marked('');
            </script>
          </div>
        </div>
      </div>
    </section>
    <nav class="nav-fillslide">
      <a class="prev load-different-content" href="#" data-content="#patternsModal14">
        <span class="icon-wrap"><i class="fa fa-fe fa-long-arrow-left fa-2x"></i></span>
        <div>
          <h3>Customers of Customers</h3>
          <span>Market Strategy</span>
          <img src="images/patterns/patterndeck_placeholder.jpg" alt="Previous thumb" />
        </div>
      </a>
      <a class="next load-different-content" href="#" data-content="#patternsModal16">
        <span class="icon-wrap"><i class="fa fa-fe fa-long-arrow-right fa-2x"></i></span>
        <div>
          <h3>Deep Roots</h3>
          <span>Operations</span>
          <img src="images/patterns/patterndeck_placeholder.jpg" alt="Next thumb" />
        </div>
      </a>
    </nav>
  </div>
</div>