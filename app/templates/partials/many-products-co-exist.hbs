<div class="patterns-modal modal fade" id="patternsModal41" tabindex="-1" role="dialog" aria-hidden="true">
  <div class="modal-content">
    <div class="close-modal" data-dismiss="modal">
      <div class="lr">
        <div class="rl">
        </div>
      </div>
    </div>
    <header>
      <div class="container">
        <div class="row">
          <div class="col-xs-12 col-sm-5 col-md-4">
            <div class="intro-text">
              <hr>
              <div class="intro-lead-in">Operations</div>
              <div class="intro-heading">Many Products Co-exist</div>
              <img src="images/maturity-1.svg" width="20px">
              </div>
          </div>
          <div class="col-xs-12 col-sm-7 col-md-8">
            <p class="text-center"><img src="images/patterns/awareinstances.jpg" alt="Change History" class="img-responsive" /></p>
            <div id="patternsModal41-content1">
            </div>
            <script>
              document.getElementById('patternsModal41-content1').innerHTML =
                marked('*Products are aware of each other and coexist together. Products broadcast events to other Products.*');
            </script>
          </div>
        </div>
      </div>
    </header>
    <!-- Services Section -->
    <section>
      <div class="container">
        <div class="row text-left">
          <div class="col-xs-12 col-sm-7 col-sm-push-5 col-md-8 col-md-push-4">
            <div id="patternsModal41-content2"></div>
            <script>
              document.getElementById('patternsModal41-content2').innerHTML =
                marked('Among the first consumer-oriented telecommunications products were voice services to connect 2 people and telegraph services to send data over Morse Code, which remained a stable commercial product offering for several decades. The emergence of mobile and internet technologies enabled new product offerings like messaging, multi-party communications, and internet services starting from the 1980s. The relatively recent emergence of smart devices has created significant intelligence at the edge of telecommunications networks. Almost every aspect of life including work, entertainment, health, travel, finance, and insurance can be accessed through multiple devices in the form of services. Individuals utilize several of these services over the internet, potentially reducing telecommunications operators to the role of “the dumb bitpipe”. This is not dissimilar to the role Internet Service Providers have been playing, unable to establish few services in the lives of customers other than providing connectivity. Increasingly, users tend to have several applications and services to address the different aspects of their connected life. However, these applications and services are rarely connected, and users must be able to cope with their fragmented nature in order to utilize them effectively. Users often buy the applications, services offered by these applications, and content either directly from the device ecosystem or from the operating system’s ecosystem. Telecom operators have recognized the value of including some of these applications, services, and content into their existing offerings, such as fixed price tariffs for music (e.g. Spotify) and movie consumption along with traditional products for voice, data, and messaging. The addition of these applications, services, and content with traditional products introduces greater complexity, especially if each of these products must be able to inter-operate with each other. Most Telecom Operators are already weighed down by the number of existing products they have from their traditional portfolio, and introducing all of these applications, services, and content as additional product offerings introduces exponentially greater complexity. Traditional integration methods to make these products inter-operable require that each Product be conscious of the data model applied by other Products, eventually requiring a Canonical Data Model in Middleware to mediate between all of the Products. This introduces even greater complexity at the center, requiring a set of data interchange interfaces between Products to the Canonical Data Model, and another set of data interchange interfaces between the Canonical Data Model to the individual Products. Furthermore, the introduction of new concepts requires the re-modeling of data interfaces at each interchange. The center gets very heavy and complex, in accordance to the law of requisite variety. This large scale of complexity introduces even greater complexity into the existing Product landscape making User Experiences increasingly error prone, expensive, and inflexible.<br /><br />Therefore some Products need to know about other Products, and when they need to know about other Products, they create a perspective that is unique to that Product. For instance, an Insurance Product will want to know about your Device Portfolio (managed in a Device Portfolio App or Device Ecosystem), and utilize this information to make insurance offers to insure these Devices. The application managing the Device Portfolio only needs to provide information about the Device, and does not have any knowledge of the insurance risk of these Devices. Products are able to inter-operate with each other by design through Events, which contain information the usage of the Product in a de-normalized structure. Each of these Events are persisted immutably, and made available to other Products used by the same User. Products consume Event information in a de-normalized structure, and interpret the data in their own way. Individual Product Developers decide what kind of Products they want to inter-operate with and communicate with other Product Developers. The eco-system where the Products exist are responsible for taking Events and reliably persisting them. Products regularly listen for new Events, and consume them if they are pertinent. Each Product decides how to process an Event in its own way, creating meaning, reactions, and actions to the Events in their own interpretive manner.<br /><br />The Three Product Champions exhibit their products at the Town Well, advertising the information their product can offer other Products. They consult the Few Skilled Gardeners about the sort of information other products in which other products might be interested. Aware and Integral Instances generate events which are persisted in a discoverable event store. By using Living Data Everywhere, the co-existence of products can be tested before they are launched.');
            </script>
          </div>
          <div class="col-xs-12 col-sm-5 col-sm-pull-7 col-md-4 col-md-pull-8">
            <div id="patternsModal41-content3" class="patterns-notes">
            </div>
            <script>
              document.getElementById('patternsModal41-content3').innerHTML =
                marked('');
            </script>
          </div>
        </div>
      </div>
    </section>
    <nav class="nav-fillslide">
      <a class="prev load-different-content" href="#" data-content="#patternsModal40">
        <span class="icon-wrap"><i class="fa fa-fe fa-long-arrow-left fa-2x"></i></span>
        <div>
          <h3>Low-walled Town Communities</h3>
          <span>Organization Structure</span>
          <img src="images/patterns/awareinstances_tn.jpg" alt="Previous thumb" />
        </div>
      </a>
      <a class="next load-different-content" href="#" data-content="#patternsModal42">
        <span class="icon-wrap"><i class="fa fa-fe fa-long-arrow-right fa-2x"></i></span>
        <div>
          <h3>Meaningful Names and Identities</h3>
          <span>Market Strategy</span>            
          <img src="images/patterns/awareinstances_tn.jpg" alt="Next thumb" />
        </div>
      </a>
    </nav>
  </div>
</div>